- name: variable on play level
  hosts: all
  vars: 
    URL: play.example.com 
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL = {{URL}}
# Note: if we declare a variable in PLAY Level then all the tasks can access that variable        
- name: variable from file in play level
  hosts: all
  vars_files:
    - sample-vars.yml
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL = {{URL}}
# we can load all the variables from a file, since it is an play level, all the tasks can access those variables     

- name: variables on task level 
  hosts: all
  tasks:
    - name: Print URL in Task1
      ansible.builtin.debug:
        msg: URL == {{URL}}
      vars:
        URL: task1.example.com

    - name: Print URL in Task2
      ansible.builtin.debug:
        msg: URL =={{URL}}
      vars:
        URL: task2.example.com

# scope of task variable is only to that task, the other task cannot acess the other tasks variables

- name: variable from inventoery
  hosts: all
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL == {{URL}}

##variable precedence
- name: variable precedence
  hosts: all
  vars:
    URL: play.example.com
  vars_files:
    - sample-vars.yml
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL == {{URL}}
      vars:
        URL: task.example.com 

## Print Hostname of remote node
- name: Print Hostname from Remote node
  hosts: all
  tasks:
    - name: Print Hostname
      ansible.builtin.debug:
        msg: Hostname = {{ansible_hostname}}
    - name: print processor info
      ansible.builtin.debug:
        msg: "{{ansible_processor}}"    

- name: Register a variable
  hosts: all
  tasks:
    - name: Run Uptime command
      ansible.builtin.shell: uptime
      register: OUT
    - name: Print Out variable
      ansible.builtin.debug:
        msg: "{{OUT}}"        